<UserControl x:Class="NiceHashMiner.Views.Benchmark.ComputeDeviceItem.ComputeDeviceItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NiceHashMiner.Views.Benchmark.ComputeDeviceItem"
             xmlns:viewModels="clr-namespace:NiceHashMiner.ViewModels.Models"
             xmlns:converters="clr-namespace:NiceHashMiner.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=viewModels:DeviceData}">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="local.TextBoxCol">
            <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Regular}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontStretch" Value="Normal" />
            <Setter Property="FontStyle" Value="Normal" />
            <Setter Property="LineHeight" Value="1.5" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="local.TextBoxColDev" BasedOn="{StaticResource local.TextBoxCol}">
            <Setter Property="Foreground" Value="{DynamicResource Gray1ColorBrush}" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="local.TextBoxColStatus" BasedOn="{StaticResource local.TextBoxCol}">
            <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Bold}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
        <converters:TranslatingConverter x:Key="TrConv" />
        <converters:StatusColorConverter x:Key="StatusConv" />
        <local:DeviceStatusVisibilityConverter x:Key="DeviceStatusVisibilityConverter" />
        
        
        <Style TargetType="{x:Type ToggleButton}" x:Key="TextBoxToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="90" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
                    <Setter Property="LineHeight" Value="1.57" />
                    <Setter Property="TextAlignment" Value="Center" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="AlgorithmHeaderTextBoxButton" TargetType="Button" BasedOn="{StaticResource ButtonTextBlock}">
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontFamily" Value="{StaticResource UbuntuFontFamily}"/>
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="MaxWidth" Value="100" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Center" />

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

    </UserControl.Resources>
    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" MinWidth="320" MinHeight="56" Margin="40,0,40,0">
            <Border BorderThickness="1" CornerRadius="4" Background="{DynamicResource BackgroundColor}">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="0.01" Direction="10" Opacity="0.1"/>
                </Border.Effect>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource Brushes.Gradient}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=AlgorithmsGridToggleButtonHidden, Path=IsChecked}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <ToggleButton Style="{StaticResource InvisibleToggleButton}" x:Name="AlgorithmsGridToggleButtonHidden" Click="DropDownAlgorithms_Button_Click" HorizontalContentAlignment="Stretch">
                <Grid Background="Transparent" HorizontalAlignment="Stretch" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0">
                        <WrapPanel  HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal" >
                            <TextBlock Style="{DynamicResource local.TextBoxColDev}" Foreground="{StaticResource Gray1ColorBrush}" Text="{Binding Dev.NameCount}" Margin="16,0,0,0"/>
                            <TextBlock Style="{DynamicResource local.TextBoxCol}" Text="{Binding Dev.Name}" TextWrapping="WrapWithOverflow" Margin="9,0,0,0"/>
                        </WrapPanel>
                        <WrapPanel HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal" Margin="0,4,0,0">
                            <TextBlock Style="{DynamicResource local.TextBoxColDev}" Foreground="{StaticResource Gray1ColorBrush}" Text="Status" Margin="16,0,0,0"/>
                            <TextBlock Style="{DynamicResource local.TextBoxCol}" Foreground="{Binding Dev.State, Converter={StaticResource StatusConv}}" Text="{Binding Dev.State, Converter={StaticResource TrConv}}" Margin="9,0,0,0"/>
                        </WrapPanel>
                    </StackPanel>
                    <WrapPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal" >
                        <TextBlock Style="{DynamicResource local.TextBoxCol}" Text="{Binding AlgosEnabled}" Margin="0,0,54,0"/>
                        <TextBlock Style="{DynamicResource local.TextBoxCol}" Text="{Binding AlgosBenchmarked}" Margin="0,0,54,0"/>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox Style="{StaticResource NHMSwitch}"
                                      x:Name="EnableDisableCheckBox"
                                      IsChecked="{Binding Enabled}"
                                      Margin="0,0,8,0" />
                            <!--TODO add context menu and all that-->
                            <ToggleButton Style="{StaticResource MenuDropdownButton}"
                                          DataContext="{Binding .}"
                                          x:Name="ToggleButtonActions"
                                          Click="Action_Button_Click"
                                          Margin="8,0,16,0" >
                                <ToggleButton.ContextMenu>
                                    <ContextMenu x:Name="DeviceActionsButtonContext">
                                        <ContextMenu.Template>
                                            <ControlTemplate>
                                                <Grid DataContext="{Binding .}">
                                                    <Border Background="{DynamicResource BackgroundColor}" BorderBrush="{DynamicResource BorderColor}" BorderThickness="1" CornerRadius="4" >
                                                        <Border.Effect>
                                                            <DropShadowEffect ShadowDepth="0.01" Direction="320" Opacity="0.2"/>
                                                        </Border.Effect>
                                                    </Border>
                                                    <StackPanel>
                                                        <Button Padding="16,7,16,7" Style="{StaticResource ContextMenuButton}" Visibility="{Binding CanStop, Converter={StaticResource NulBoolToVisibilityConverter}}" Content="Stop Benchmark" Click="Button_Click_StopBenchmarking" />
                                                        <Button Padding="16,7,16,7" Style="{StaticResource ContextMenuButton}" Visibility="{Binding CanStart, Converter={StaticResource NulBoolToVisibilityConverter}}" Content="Start Benchmark" Click="Button_Click_StartBenchmarking" />
                                                        <!--<Button Padding="16,7,16,7" Style="{StaticResource ContextMenuButton}" Visibility="{Binding CanStop, Converter={StaticResource NulBoolToVisibilityConverter}}" Content="Stop Benchmark" Click="Button_Click_StartBenchmarking" />-->
                                                        <Button Padding="16,7,16,7" Style="{StaticResource ContextMenuButton}" Visibility="{Binding CanClearAllSpeeds, Converter={StaticResource NulBoolToVisibilityConverter}}" Content="Clear all speeds" Click="Button_Click_ClearAllSpeeds" />
                                                        <Button Padding="16,7,16,7" Style="{StaticResource ContextMenuButton}" Visibility="{Binding CanClearAllSpeeds, Converter={StaticResource NulBoolToVisibilityConverter}}" Content="Enable Benchmarked Only" Click="Button_Click_EnablebenchmarkedOnly" />
                                                    </StackPanel>
                                                </Grid>
                                            </ControlTemplate>
                                        </ContextMenu.Template>
                                    </ContextMenu>
                                </ToggleButton.ContextMenu>
                            </ToggleButton>
                        </StackPanel>
                        
                    </WrapPanel>
                    <ToggleButton Grid.Column="2" x:Name="AlgorithmsGridToggleButton" Content="&#xF105;" Style="{DynamicResource TextBoxToggleButton}" Click="DropDownAlgorithms_Button_Click" Margin="0,0,16,0" />
                </Grid>
            </ToggleButton>
        </Grid>

        <Grid Grid.Row="1" x:Name="AlgorithmsGrid" Background="Transparent" Visibility="Collapsed" Width="Auto" Margin="40,20,40,0">
            <!--TODO ALGORITHMS HERE-->
            <!--CHECK IF WE NEED SCROLL VIEWER-->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <UniformGrid Grid.Row="0" Columns="6" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                <Button Style="{DynamicResource AlgorithmHeaderTextBoxButton}" Content="ALGORITHM" Click="SortAlgorithmButtonClick" HorizontalAlignment="Left" Margin="16,0,0,0"/>
                <Button Style="{DynamicResource AlgorithmHeaderTextBoxButton}" Content="MINER" Click="SortMinerButtonClick" />
                <Button Style="{DynamicResource AlgorithmHeaderTextBoxButton}" Content="SPEED" Click="SortSpeedButtonClick" />
                <Button Style="{DynamicResource AlgorithmHeaderTextBoxButton}" Content="BTC / 24H" Click="SortPayingButtonClick" />
                <!--margin here to fix off align-->
                <Button Style="{DynamicResource AlgorithmHeaderTextBoxButton}" Content="STATUS" Click="SortStatusButtonClick" Margin="-40,0,0,0"/>
                <!--MAX WITH HERE DEFINES THE GRID-->
                <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right" MaxWidth="100" Visibility="{Binding Dev.State, Converter={StaticResource DeviceStatusVisibilityConverter}}">
                    <Button Style="{DynamicResource AlgorithmHeaderTextBoxButton}" Content="SELECT ALL" Click="SortEnabledButtonClick" Margin="0,0,4,0"
                            />
                    <CheckBox Style="{StaticResource NHMSwitch}"
                              IsChecked="{Binding AllAgorithmsEnabled, Mode=TwoWay}"
                              Margin="4,0,3,0" />
                </WrapPanel>
            </UniformGrid>
            <ItemsControl Grid.Row="1" ItemsSource="{Binding AlgorithmSettingsCollection}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:AlgorithmItem DataContext="{Binding .}" Margin="0,8,0,0" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Separator Grid.Row="2" Margin="0,16,0,8" Background="{DynamicResource BorderColor}" />

        </Grid>
        
        
    </Grid>
</UserControl>
